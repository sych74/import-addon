type: install
name: Standalone Pro

baseUrl: https://raw.githubusercontent.com/sych74/import-addon/WP-349
  
globals:
  wp_admin_pass: ${fn.password(10)}
  db_user: user-${fn.random}
  db_pass: ${fn.password(10)}
  env_name: wp-${fn.random}
  
  envGroups: ${settings.envGroups:"test"}  
  project_name: ${settings.project_name}
  migration_dir: /home/jelastic/migrator
  wpenv_file: /home/jelastic/migrator/.wpenv
  wpenv_file_content: ${settings.wpenv_file_content}
  projects_file: /home/jelastic/migrator/projects.json
  projects_file_content: ${settings.projects_file_content}
  
onInstall:
  - createEnv
  - addLimits
  - addConfigs
  - installAddon
  - importProject

actions:
  createEnv:
    - install:
        jps: https://raw.githubusercontent.com/jelastic-jps/wordpress/v2.2.0/manifest.yml?_r=${fn.random}
        envName: ${globals.env_name}
        loggerName: ${globals.env_name}
        displayName: ${globals.project_name}
        envGroups: ${globals.envGroups}
        settings:
          ls-addon: true
          waf: ${settings.waf:true}
          wp_protect: ${settings.wp_protect:true}
          le-addon: ${settings.le-addon:false}
          cdn-addon: ${settings.cdn-addon:false}
          mu-addon: false
          woocommerce: false
          DB_USER: ${globals.db_user}
          DB_PASS: ${globals.db_pass}
          WP_ADMIN_PASS: ${globals.wp_admin_pass}
          success_email: false
          project: ${settings.project:default}
          projectScope: ${settings.projectScope:production}

  addLimits:
    - env.control.ApplyNodeGroupData[cp]:
        envName: ${globals.env_name}
        data:
          fixedTopologyLayers: 1

  addConfigs:
    - cmd[${nodes.cp.master.id}]: |-
        echo '${globals.wpenv_file_content}' > ${globals.wpenv_file};
        echo 'PROJECT_NAME=${globals.project_name}' >> ${globals.wpenv_file};
        echo '${globals.projects_file_content}' > ${globals.projects_file};

  installAddon:
    - install:
        jps: https://raw.githubusercontent.com/sych74/import-addon/WP-349/manifest.yml?_r=${fn.random}
        envName: ${globals.env_name}
        
  importProject:
    - script: | 
        var envInfo = jelastic.env.control.GetEnvInfo('${globals.env_name}', session);
        if (envInfo.result != 0) return envInfo;
        for (var i = 0, k = envInfo.nodes; i < k.length; i++) {
          if (k[i].nodeGroup == 'cp')
            master_id = k[i].id;
        }       
        var cmd1 = "bash ${globals.migrator_dir}/migrator.sh importProject --project-name==${globals.project_name}";       
        return api.environment.control.ExecCmdById({
          envName: "${globals.env_name}", 
          session: session,
          nodeId: master_id, 
          commandList: toJSON([{"command": cmd1}])
        });
