type: install
name: Standalone Pro
baseUrl: https://raw.githubusercontent.com/sych74/import-addon/WP-349
  
globals:
  wp_admin_pass: ${fn.password(10)}
  db_user: user-${fn.random}
  db_pass: ${fn.password(10)}
  env_name: wp-${fn.random}
  envGroups: "${settings.envGroups}"
  project_name: "${settings.project_name}"
  migration_dir: "/home/jelastic/migrator"
  wpenv_file: "/home/jelastic/migrator/.wpenv"
  projects_file: "/home/jelastic/migrator/projects.json"
  
onInstall:
  - createEnv
  - addConfigs
  - importProject
actions:
  createEnv:
    - api: jelastic.billing.subscription.InstallProduct
      session: ${settings.userSession}
      subscriptionId: ${settings.subscriptionId}
      envName: ${globals.env_name}
      displayName: ${globals.project_name}
      envGroups: ${globals.envGroups}
  addConfigs:
    - projects_file_content: ${settings.projects_file_content}
      wpenv_file_content: ${settings.wpenv_file_content}
      script: |
        var envInfo = jelastic.env.control.GetEnvInfo('${env.envName}', session);
        if (envInfo.result != 0) return envInfo;
        for (var i = 0, k = envInfo.nodes; i < k.length; i++) {
          if (k[i].nodeGroup == 'cp')
            master_id = k[i].id;
        }       
        
        var cmd1 = "echo '" + wpenv_file_content + "'  > ${globals.wpenv_file};";
        var cmd2 = "echo 'PROJECT_NAME=${settings.project_name}' >> ${globals.wpenv_file};";
        var cmd3 = "echo '" + projects_file_content + "'  > ${globals.projects_file};";
        return api.environment.control.ExecCmdById({
          envName: "${env.envName}", 
          session: session,
          nodeId: master_id, 
          commandList: toJSON([{"command": cmd1}, {"command": cmd2}, {"command": cmd3}])
        });
        
  importProject:
    - script: | 
        var envInfo = jelastic.env.control.GetEnvInfo('${globals.env_name}', session);
        if (envInfo.result != 0) return envInfo;
        for (var i = 0, k = envInfo.nodes; i < k.length; i++) {
          if (k[i].nodeGroup == 'cp')
            master_id = k[i].id;
        }       
        var cmd1 = "bash ${globals.migrator_dir}/migrator.sh importProject --project-name==${globals.project_name}";       
        return api.environment.control.ExecCmdById({
          envName: "${globals.env_name}", 
          session: session,
          nodeId: master_id, 
          commandList: toJSON([{"command": cmd1}])
        });
